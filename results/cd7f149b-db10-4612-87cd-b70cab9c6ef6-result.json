{"name": "test_change_notification", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[contains(.,'Notifications')]\"}\n  (Session info: chrome=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x004E6E73+174291]\n\t(No symbol) [0x00410AC1]\n\t(No symbol) [0x00126FF6]\n\t(No symbol) [0x00159876]\n\t(No symbol) [0x00159C2C]\n\t(No symbol) [0x0018BD42]\n\t(No symbol) [0x00177054]\n\t(No symbol) [0x0018A104]\n\t(No symbol) [0x00176DA6]\n\t(No symbol) [0x00151034]\n\t(No symbol) [0x00151F8D]\n\tGetHandleVerifier [0x005849CC+820268]\n\tsqlite3_dbdata_init [0x00644EBE+652494]\n\tsqlite3_dbdata_init [0x006448D9+650985]\n\tsqlite3_dbdata_init [0x0063962C+605244]\n\tsqlite3_dbdata_init [0x0064586B+654971]\n\t(No symbol) [0x0041FEBC]\n\t(No symbol) [0x00418428]\n\t(No symbol) [0x0041854D]\n\t(No symbol) [0x00405858]\n\tBaseThreadInitThunk [0x76E27BA9+25]\n\tRtlInitializeExceptionChain [0x77C7BD2B+107]\n\tRtlClearBits [0x77C7BCAF+191]\n\t(No symbol) [0x00000000]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e425dd14918a29bc777a69dcb573ba55\")>, login = None\n\n    @allure.feature('Change notifications')\n    @allure.severity('critical')\n    @pytest.mark.regression\n    def test_change_notification(browser, login):\n        page = ProfilePage(browser, urls.LINK_PROFILE)\n        page.open()\n>       page.go_to_notification_section()\n\nUI\\tests_UI\\test_profile_page.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nUI\\pages\\profile_page.py:109: in go_to_notification_section\n    notification = self.browser.find_element(*ProfilePageLocators.SECTION_NOTIFICATIONS)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000238BEDFCF10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\tRtlInitializeExceptionChain [0x77C7BD2B+107]\\\\n\\\\tRtlClearBits [0x77C7BCAF+191]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[contains(.,'Notifications')]\"}\nE         (Session info: chrome=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x004E6E73+174291]\nE       \t(No symbol) [0x00410AC1]\nE       \t(No symbol) [0x00126FF6]\nE       \t(No symbol) [0x00159876]\nE       \t(No symbol) [0x00159C2C]\nE       \t(No symbol) [0x0018BD42]\nE       \t(No symbol) [0x00177054]\nE       \t(No symbol) [0x0018A104]\nE       \t(No symbol) [0x00176DA6]\nE       \t(No symbol) [0x00151034]\nE       \t(No symbol) [0x00151F8D]\nE       \tGetHandleVerifier [0x005849CC+820268]\nE       \tsqlite3_dbdata_init [0x00644EBE+652494]\nE       \tsqlite3_dbdata_init [0x006448D9+650985]\nE       \tsqlite3_dbdata_init [0x0063962C+605244]\nE       \tsqlite3_dbdata_init [0x0064586B+654971]\nE       \t(No symbol) [0x0041FEBC]\nE       \t(No symbol) [0x00418428]\nE       \t(No symbol) [0x0041854D]\nE       \t(No symbol) [0x00405858]\nE       \tBaseThreadInitThunk [0x76E27BA9+25]\nE       \tRtlInitializeExceptionChain [0x77C7BD2B+107]\nE       \tRtlClearBits [0x77C7BCAF+191]\nE       \t(No symbol) [0x00000000]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1702416748912, "stop": 1702416759828, "uuid": "64f81131-3206-47b2-9b50-0605f3600f14", "historyId": "016ce64426bf85b6eebcbdc2b36ba371", "testCaseId": "016ce64426bf85b6eebcbdc2b36ba371", "fullName": "UI.tests_UI.test_profile_page#test_change_notification", "labels": [{"name": "feature", "value": "Change notifications"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "UI.tests_UI"}, {"name": "suite", "value": "test_profile_page"}, {"name": "host", "value": "diana"}, {"name": "thread", "value": "30836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "UI.tests_UI.test_profile_page"}]}